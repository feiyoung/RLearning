getSources()
getReaders()
library("tm")
data("crude")
#----------------------------数据输入
txt <- system.file("texts", "txt", package = "tm")
(ovid <- VCorpus(DirSource(txt, encoding = "UTF-8"),
                  readerControl = list(language = "lat")))
docs <- c("This is a text.", "This another one.")
VCorpus(VectorSource(docs))
reut21578 <- system.file("texts", "crude", package = "tm") # 创建挥发语料库
reuters <- VCorpus(DirSource(reut21578),
  readerControl = list(reader = readReut21578XMLasPlain))

#------------------------------数据输出
writeCorpus(ovid) # 将列表ovid中的每个元素写入到不同的文本文档中

#-----------------------------查看Corpora语料库中的数据
inspect(ovid[1:2]) # 查看其中的两篇文档
meta(ovid[[2]], "id")
identical(ovid[[2]], ovid[["ovid_2.txt"]])
writeLines(as.character(ovid[[2]]))
lapply(ovid[1:2], as.character)

#----------------------------
reuters <- tm_map(reuters, stripWhitespace) # --删除额外的空白格
reuters <- tm_map(reuters, content_transformer(tolower)) # 大写字母转换成小写
reuters <- tm_map(reuters, removeWords, stopwords("english")) # 移除停止词

## 过滤器
idx <- meta(reuters, "id") == '237' &
     meta(reuters, "heading") == 'INDONESIA SEEN AT CROSSROADS OVER ECONOMIC CHANGE'
idx
reuters[idx]

#--------------------------元数据管理
DublinCore(reuters[[1]], "Creator") <- "刘伟"
meta(reuters[[1]])
meta(reuters, tag = "test", type = "corpus") <- "test meta"
meta(reuters, type='corpus')
meta(reuters, 'foo') <- letters[1:20]
meta(reuters)

#----------------------------术语文档矩阵
dtm <- DocumentTermMatrix(reuters)
inspect(dtm[5:10, 740:743])
findFreqTerms(dtm, 5)  # 寻找至少出现了5次的术语
findAssocs(dtm, "opec", 0.8) # 寻找与术语'opec'相关系数至少为0.8的术语
inspect(removeSparseTerms(dtm, 0.4))

#---------------------------词典
inspect(DocumentTermMatrix(reuters,
  list(dictionary = c("prices", "crude", "oil"))))

### code chunk number 1: Init
###################################################
library("tm")
library("XML")


###################################################
### code chunk number 2: extensions.Rnw:55-58
###################################################
VecSource <- function(x)
    SimpleSource(length = length(x), content = as.character(x),
                 class = "VecSource")


###################################################
### code chunk number 3: extensions.Rnw:68-72
###################################################
getElem.VecSource <-
function(x) list(content = x$content[x$position], uri = NULL)
pGetElem.VecSource <-
function(x) lapply(x$content, function(y) list(content = y, uri = NULL))


###################################################
### code chunk number 4: extensions.Rnw:100-102
###################################################
readPlain <- function(elem, language, id)
    PlainTextDocument(elem$content, id = id, language = language)


###################################################
### code chunk number 5: extensions.Rnw:130-135
###################################################
df <- data.frame(contents = c("content 1", "content 2", "content 3"),
                 title    = c("title 1"  , "title 2"  , "title 3"  ),
                 authors  = c("author 1" , "author 2" , "author 3" ),
                 topics   = c("topic 1"  , "topic 2"  , "topic 3"  ),
                 stringsAsFactors = FALSE)


###################################################
### code chunk number 6: Mapping
###################################################
m <- list(content = "contents", heading = "title",
          author = "authors", topic = "topics")


###################################################
### code chunk number 7: myReader
###################################################
myReader <- readTabular(mapping = m)


###################################################
### code chunk number 8: extensions.Rnw:157-158
###################################################
(corpus <- VCorpus(DataframeSource(df), readerControl = list(reader = myReader)))


###################################################
### code chunk number 9: extensions.Rnw:163-165
###################################################
corpus[[1]]
meta(corpus[[1]])


###################################################
### code chunk number 10: CustomXMLFile
###################################################
custom.xml <- system.file("texts", "custom.xml", package = "tm")
print(readLines(custom.xml), quote = FALSE)


###################################################
### code chunk number 11: mySource
###################################################
mySource <- function(x)
    XMLSource(x, function(tree) XML::xmlChildren(XML::xmlRoot(tree)),
              myXMLReader)


###################################################
### code chunk number 12: myXMLReader
###################################################
myXMLReader <- readXML(
    spec = list(author = list("node", "/document/writer"),
                content = list("node", "/document/description"),
                datetimestamp = list("function",
                    function(x) as.POSIXlt(Sys.time(), tz = "GMT")),
                description = list("attribute", "/document/@short"),
                heading = list("node", "/document/caption"),
                id = list("function", function(x) tempfile()),
                origin = list("unevaluated", "My private bibliography"),
                type = list("node", "/document/type")),
    doc = PlainTextDocument())


###################################################
### code chunk number 13: extensions.Rnw:273-274
###################################################
corpus <- VCorpus(mySource(custom.xml))


###################################################
### code chunk number 14: extensions.Rnw:278-280
###################################################
corpus[[1]]
meta(corpus[[1]])


