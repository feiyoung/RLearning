###################距离判别示例############################################
##案例1
DirFile<-"E:\\学习\\R用于统计分析论文学习\\判别分析\\EvaData.txt"
EvaData<-read.table(file=DirFile,header=TRUE) #载入数据
D1.Data<-subset(EvaData,EvaData$Y == 1 | EvaData$Y == 2 ) #该数据集作为训练样本
D2.Data<-subset(EvaData,EvaData$Y == 3) #该数据集作为预测样本
plot(D1.Data[,1:2],pch=D1.Data$Y,xlab="考核指标1",ylab="考核指标2",main="部门业绩考核情况")
T1<-subset(D1.Data[,1:2],D1.Data$Y==1) #选出评奖等级为1的变量集
T2<-subset(D1.Data[,1:2],D1.Data$Y==2) #选出评奖为2的变量集
CenterT1<-colMeans(T1) #按列计算均值
CenterT2<-colMeans(T2) #T2的列均值
Center<-rbind(CenterT1,CenterT2) #按行合并
points(Center[,1],Center[,2],pch=c(16,17),col=2) #画出中心
S1<-(length(T1$X1)-1)*cov(T1)
S2<-(length(T2$X1)-1)*cov(T2)
S<-(S1+S2)/(length(T1$X1)+length(T2$X1)-2)  #计算合并的组内协方差
##对待分类样本进行判别分类
for(i in 1:length(D2.Data$X1)){
 R1<-mahalanobis(D2.Data[i,1:2],center=CenterT1,cov=S)
 R2<-mahalanobis(D2.Data[i,1:2],center=CenterT2,cov=S)
 ifelse(R1<R2,D2.Data[i,3]<-1,D2.Data[i,3]<-2)
}
##可视化分类结果
points(D2.Data[,1],D2.Data[,2],pch=D2.Data[,3],col=3) 

##案例2 
##模拟3个类别，3个变量的距离判别分析
N<-300
V1<-matrix(rnorm(N),ncol=3);
V2<-matrix(rnorm(N,mean=3,sd=5),ncol=3);
V3<-matrix(rnorm(N,-5,10),ncol=3)
X1<-cbind(V1,rep(1,times=N/3)) 
X2<-cbind(V2,rep(2,times=N/3))
X3<-cbind(V3,rep(3,times=N/3))
X.data<-rbind(X1,X2,X3)  #训练样本构造完成
M<-60
V11<-matrix(rnorm(M),ncol=3); #每20个为一类
V21<-matrix(rnorm(M,mean=3,sd=5),ncol=3);
V31<-matrix(rnorm(M,-5,10),ncol=3)
C.data<-rbind(V11,V21,V31) #待分类样本构造完成

T1<-subset(X.data[,1:3],X.data[,4]==1) #选出类别为1的变量集
T2<-subset(X.data[,1:3],X.data[,4]==2) #选出类别为2的变量集
T3<-subset(X.data[,1:3],X.data[,4]==3) #选出类别为3的变量集
CenterT1<-colMeans(T1) #按列计算均值
CenterT2<-colMeans(T2) #T2的列均值
CenterT3<-colMeans(T3)
Center<-rbind(CenterT1,CenterT2,CenterT3) #按行合并
Cov1<-cov(T1);Cov2<-cov(T2);Cov3<-cov(T3);

##对待分类样本进行判别分类
leiBie<-0
for(i in 1:dim(C.data)[1]){
 R1<-mahalanobis(C.data[i,],center=CenterT1,cov=Cov1)
 R2<-mahalanobis(C.data[i,],center=CenterT2,cov=Cov2)
 R3<-mahalanobis(C.data[i,],center=CenterT3,cov=Cov3)
 if(R1<R2 & R1<R3)  leiBie[i]<-1
 if(R2<R1 & R2<R3) leiBie[i]<-2
 if(R3<R1 & R3<R2) leiBie[i]<-3
}
 leiBie #输出分类结果
#-------------------make it to be a convenient function
## data is the train data whose last column is the class, and newdata is the testdata.
dist.da <- function(data, newdata=NULL){
  data <- data1; newdata <- newdata
  mn <- dim(data)
  n <- mn[2]-1
  if(!is.data.frame(data)) stop('data must be a data.frame')
  if(is.null(newdata)) newdata <- data[,1:n]
  if(is.vector(newdata)) newdata <- t(newdata) 
  else if(! is.matrix(newdata)) newdata <- as.matrix(newdata)
  class1 <- levels(data[,mn[2]])
  K <- nlevels(data[,mn[2]])
  T <- lapply(class1, function(x) subset(data[,1:n],data[,mn[2]]==x))
  Center <- lapply(T, colMeans)
  Cov <- lapply(T, cov) 
  
  ##对待分类样本进行判别分类
  leiBie<-0
  for(i in 1:dim(newdata)[1]){
    R <- NULL
    for(j in 1:K){
     R[j]<-mahalanobis(newdata[i,],center=Center[[j]],cov=Cov[[j]])
    }
    leiBie[i] <- class1[which.min(R)[1]]
  }
  leiBie #输出分类结果
}
X1 <- c(-1.9,-6.9,5.2,5.0,7.3,6.8,0.9,-12.5,1.5,3.8,
        0.2,-0.1,0.4,2.7,2.1,-4.6,-1.7,-2.6,2.6,-2.8)
X2 <- c(3.2,10.4,2.0,2.5,0.0,12.7,-15.4,-2.5,1.3,6.8,
        0.2,7.5,14.6,8.3,0.8,4.3,10.9,13.1,12.8,10.0)
n <- length(X1)/2
Wea <- c(rep('rain', n),rep('sun', n))
data1 <- data.frame(X1=X1,X2=X2, Weather=Wea)
newdata <- data.frame(X1=8.1,X2=2.0)
dist.da(data1, newdata)